{
	"info": {
		"_postman_id": "4c1616bf-dc24-4055-b517-f717b74a7ffe",
		"name": "MyRecipeBook",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28756828"
	},
	"item": [
		{
			"name": "Registry User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var ddd = _.random(10, 99)\r",
							"var additionalNumber = _.random(1, 9)\r",
							"var first4Digits = _.random(1000, 9999)\r",
							"var last4Digits = _.random(1000, 9999)\r",
							"\r",
							"var phoneNumber = ddd + \" \" + additionalNumber + \" \" + first4Digits + \"-\" + last4Digits\r",
							"\r",
							"pm.environment.set(\"phoneNumber\", phoneNumber)\r",
							"\r",
							"let email = pm.variables.replaceIn('{{$randomEmail}}')\r",
							"let password = pm.variables.replaceIn('{{$randomPassword}}')\r",
							"\r",
							"postman.setGlobalVariable(\"EMAIL\", email);\r",
							"postman.setGlobalVariable(\"PASSWORD\", password);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate if registry was sucessful\", function()\r",
							"{\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.have.jsonBody(\"token\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept-Language",
						"value": "fr",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{EMAIL}}\",\r\n  \"password\": \"{{PASSWORD}}\",\r\n  \"phone\": \"{{phoneNumber}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/user",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate if login was successful\", function()\r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.have.jsonBody(\"name\");\r",
							"    pm.response.to.have.jsonBody(\"token\");\r",
							"\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.environment.set(\"TOKEN\", jsonData.token);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{EMAIL}}\",\r\n  \"password\": \"{{PASSWORD}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/login",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Erro",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate if login was error\", function()\r",
							"{\r",
							"    pm.response.to.have.status(401);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.have.jsonBody(\"erroMessages\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"email@invalid.com\",\r\n  \"password\": \"invalidPassword\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/login",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let newPassword = pm.variables.replaceIn('{{$randomPassword}}')\r",
							"\r",
							"postman.setGlobalVariable(\"NEWPASSWORD\", newPassword);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate if change password was successful\", function()\r",
							"{\r",
							"    pm.response.to.have.status(204);\r",
							"\r",
							"    var newPassword = postman.getGlobalVariable(\"NEWPASSWORD\")\r",
							"    pm.environment.set(\"PASSWORD\" , newPassword);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"actualPassword\": \"{{PASSWORD}}\",\r\n  \"newPassword\": \"{{NEWPASSWORD}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/user/change-password",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"user",
						"change-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Password Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate if login new pass was successful\", function()\r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.have.jsonBody(\"name\");\r",
							"    pm.response.to.have.jsonBody(\"token\");\r",
							"\r",
							"    let jsonData = pm.response.json();\r",
							"    postman.setGlobalVariable(\"TOKEN\" ,jsonData.token);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{EMAIL}}\",\r\n  \"password\": \"{{PASSWORD}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/login",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Registry Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate if registry recipe was sucessful\", function()\r",
							"{\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.have.jsonBody(\"id\");\r",
							"    pm.response.to.have.jsonBody(\"title\");\r",
							"    pm.response.to.have.jsonBody(\"category\");\r",
							"    pm.response.to.have.jsonBody(\"preparationMethod\");\r",
							"    pm.response.to.have.jsonBody(\"ingredients\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{$randomProduct}}\",\r\n  \"category\": 3,\r\n  \"preparationMethod\": \"{{$randomLoremParagraph}}\",\r\n  \"ingredients\": [\r\n    {\r\n      \"product\": \"{{$randomProduct}}\",\r\n      \"quantity\": \"{{$randomVerb}}\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/recipe",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"recipe"
					]
				}
			},
			"response": []
		},
		{
			"name": "Recover Dashboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate if recover dashboard was sucessful\", function()\r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"\r",
							"    let jsonData = pm.response.json()\r",
							"    pm.expect(jsonData.recipes).to.be.an(\"array\")\r",
							"    pm.expect(jsonData.recipes[0]).to.have.keys(\"id\", \"title\", \"ingredientsQuantity\")\r",
							"\r",
							"    postman.setGlobalVariable(\"RECIPE_ID\" , jsonData.recipes[0].id);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"titleOrIngredient\": \"\",\r\n  \"category\": null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/dashboard",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"dashboard"
					]
				}
			},
			"response": []
		},
		{
			"name": "Recover Recipe By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate if recover recipe by id was successful\", function()\r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.have.jsonBody(\"id\");\r",
							"    pm.response.to.have.jsonBody(\"title\");\r",
							"    pm.response.to.have.jsonBody(\"category\");\r",
							"    pm.response.to.have.jsonBody(\"preparationMethod\");\r",
							"\r",
							"    let jsonData = pm.response.json()\r",
							"    pm.expect(jsonData.ingredients).to.be.an(\"array\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/recipe/{{RECIPE_ID}}",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"recipe",
						"{{RECIPE_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate if update recipe was successful\", function()\r",
							"{\r",
							"    pm.response.to.have.status(204);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{$randomProduct}}\",\r\n  \"category\": 2,\r\n  \"preparationMethod\": \"{{$randomLoremParagraph}}\",\r\n  \"ingredients\": [\r\n    {\r\n      \"product\": \"{{$randomProduct}}\",\r\n      \"quantity\": \"{{$randomVerb}}\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URLBASE}}/recipe/{{RECIPE_ID}}",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"recipe",
						"{{RECIPE_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Recipe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate if update recipe was successful\", function()\r",
							"{\r",
							"    pm.response.to.have.status(204);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URLBASE}}/recipe/{{RECIPE_ID}}",
					"host": [
						"{{URLBASE}}"
					],
					"path": [
						"recipe",
						"{{RECIPE_ID}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URLBASE",
			"value": "https://localhost:7084",
			"type": "string"
		}
	]
}